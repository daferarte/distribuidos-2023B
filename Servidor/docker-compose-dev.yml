version: "3.6"

services:
  backend-dev:
    restart: always
    # deploy:
    #   mode: replicated
    #   replicas: 8
    #   endpoint_mode: vip
    #   resources:
    #     limits:
    #       cpus: '0.70'
    #       memory: 512M
    #     reservations:
    #       cpus: '0.3'
    #       memory: 250M
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "1000:3000"
    volumes:
      - ./backend/servidor:/usr/src/app
    networks:
      - devnet

  front-dev:
    restart: always
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '0.70'
    #       memory: 512M
    #     reservations:
    #       cpus: '0.3'
    #       memory: 200M
    build:
      context: ./fronted
      dockerfile: Dockerfile
    ports:
      - "2000:3000"
    volumes:
      - ./fronted/fronted:/usr/src/app
    networks:
      - devnet
  
  db-dev:
    image: postgres
    restart: always
    
    deploy:
      resources:
        limits:
          cpus: '0.70'
          memory: 512M
        reservations:
          cpus: '0.3'
          memory: 250M
    ports:
      - "5433:5432"
    environment:
      POSTGRES_PASSWORD: "12345"
    volumes:
      - ./baseDatos/local_pgdata_dev:/var/lib/postgresql/data
    networks:
      - devnet

  db-auditoria:
    image: postgres
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.70'
          memory: 512M
        reservations:
          cpus: '0.3'
          memory: 250M
    ports:
      - "5434:5432"
    environment:
      POSTGRES_PASSWORD: "123456"
    volumes:
      - ./baseDatos/local_pgdata_audit:/var/lib/postgresql/data
    networks:
      - devnet

  pgadmin-dev:
    image: dpage/pgadmin4
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.70'
          memory: 512M
        reservations:
          cpus: '0.3'
          memory: 250M
    ports:
      - "8081:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: dani@dani.com
      PGADMIN_DEFAULT_PASSWORD: "12345"
    volumes:
      - ./baseDatos/pgadmin_data_dev:/var/lib/pgadmin
    networks:
      - devnet
    
  nginx:
    restart: always
    build:
      context: ./nginx
      dockerfile: Dockerfile
    # volumes:
    #   - ./mascomunitario/static:/home/app/web/static
    #   - ./mascomunitario/media:/home/app/web/media
      #- /etc/ssl/certs/propios/unicesmag:/certs
    ports:
      - 80:80
      #- 443:443
    # depends_on:
    #   - web
    networks:
      - devnet

networks:
    devnet:
      driver: bridge
  